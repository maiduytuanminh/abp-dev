/* This file is automatically generated by SS framework to use MVC Controllers from javascript. */


// module docs-admin

(function(){

  // controller smartsoftware.docs.admin.documentsAdmin

  (function(){

    ss.utils.createNamespace(window, 'smartsoftware.docs.admin.documentsAdmin');

    smartsoftware.docs.admin.documentsAdmin.clearCache = function(input, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/documents/ClearCache',
        type: 'POST',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    smartsoftware.docs.admin.documentsAdmin.pullAll = function(input, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/documents/PullAll',
        type: 'POST',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    smartsoftware.docs.admin.documentsAdmin.pull = function(input, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/documents/Pull',
        type: 'POST',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    smartsoftware.docs.admin.documentsAdmin.getAll = function(input, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/documents/GetAll' + ss.utils.buildQueryString([{ name: 'projectId', value: input.projectId }, { name: 'name', value: input.name }, { name: 'version', value: input.version }, { name: 'languageCode', value: input.languageCode }, { name: 'fileName', value: input.fileName }, { name: 'format', value: input.format }, { name: 'creationTimeMin', value: input.creationTimeMin }, { name: 'creationTimeMax', value: input.creationTimeMax }, { name: 'lastUpdatedTimeMin', value: input.lastUpdatedTimeMin }, { name: 'lastUpdatedTimeMax', value: input.lastUpdatedTimeMax }, { name: 'lastSignificantUpdateTimeMin', value: input.lastSignificantUpdateTimeMin }, { name: 'lastSignificantUpdateTimeMax', value: input.lastSignificantUpdateTimeMax }, { name: 'lastCachedTimeMin', value: input.lastCachedTimeMin }, { name: 'lastCachedTimeMax', value: input.lastCachedTimeMax }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    smartsoftware.docs.admin.documentsAdmin.removeFromCache = function(documentId, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/documents/RemoveDocumentFromCache' + ss.utils.buildQueryString([{ name: 'documentId', value: documentId }]) + '',
        type: 'PUT',
        dataType: null
      }, ajaxParams));
    };

    smartsoftware.docs.admin.documentsAdmin.reindex = function(documentId, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/documents/ReindexDocument' + ss.utils.buildQueryString([{ name: 'documentId', value: documentId }]) + '',
        type: 'PUT',
        dataType: null
      }, ajaxParams));
    };

    smartsoftware.docs.admin.documentsAdmin.getFilterItems = function(ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/documents/GetFilterItems',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller smartsoftware.docs.admin.projectsAdmin

  (function(){

    ss.utils.createNamespace(window, 'smartsoftware.docs.admin.projectsAdmin');

    smartsoftware.docs.admin.projectsAdmin.getList = function(input, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/projects' + ss.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    smartsoftware.docs.admin.projectsAdmin.get = function(id, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/projects/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    smartsoftware.docs.admin.projectsAdmin.create = function(input, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/projects',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    smartsoftware.docs.admin.projectsAdmin.update = function(id, input, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/projects/' + id + '',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    smartsoftware.docs.admin.projectsAdmin['delete'] = function(id, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/projects' + ss.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

    smartsoftware.docs.admin.projectsAdmin.reindexAll = function(ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/projects/ReindexAll',
        type: 'POST',
        dataType: null
      }, ajaxParams));
    };

    smartsoftware.docs.admin.projectsAdmin.getListWithoutDetails = function(ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/projects/GetListProjectWithoutDetailsAsync',
        type: 'GET'
      }, ajaxParams));
    };

    smartsoftware.docs.admin.projectsAdmin.reindex = function(input, ajaxParams) {
      return ss.ajax($.extend(true, {
        url: ss.appPath + 'api/docs/admin/projects/Reindex',
        type: 'POST',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

  })();

})();


