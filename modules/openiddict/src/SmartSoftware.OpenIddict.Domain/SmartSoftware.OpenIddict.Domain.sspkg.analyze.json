{
  "name": "SmartSoftware.OpenIddict.Domain",
  "hash": "7bc7931189c97d5bef0fed5dbd107b10",
  "contents": [
    {
      "namespace": "SmartSoftware.OpenIddict",
      "dependsOnModules": [
        {
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "namespace": "SmartSoftware.Domain",
          "name": "SmartSoftwareDddDomainModule"
        },
        {
          "declaringAssemblyName": "SmartSoftware.Identity.Domain",
          "namespace": "SmartSoftware.Identity",
          "name": "SmartSoftwareIdentityDomainModule"
        },
        {
          "declaringAssemblyName": "SmartSoftware.OpenIddict.Domain.Shared",
          "namespace": "SmartSoftware.OpenIddict",
          "name": "SmartSoftwareOpenIddictDomainSharedModule"
        },
        {
          "declaringAssemblyName": "SmartSoftware.DistributedLocking.Abstractions",
          "namespace": "SmartSoftware.DistributedLocking",
          "name": "SmartSoftwareDistributedLockingAbstractionsModule"
        },
        {
          "declaringAssemblyName": "SmartSoftware.Caching",
          "namespace": "SmartSoftware.Caching",
          "name": "SmartSoftwareCachingModule"
        },
        {
          "declaringAssemblyName": "SmartSoftware.Guids",
          "namespace": "SmartSoftware.Guids",
          "name": "SmartSoftwareGuidsModule"
        }
      ],
      "implementingInterfaces": [
        {
          "name": "ISmartSoftwareModule",
          "namespace": "SmartSoftware.Modularity",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.Modularity.ISmartSoftwareModule"
        },
        {
          "name": "IOnPreApplicationInitialization",
          "namespace": "SmartSoftware.Modularity",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.Modularity.IOnPreApplicationInitialization"
        },
        {
          "name": "IOnApplicationInitialization",
          "namespace": "SmartSoftware",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.IOnApplicationInitialization"
        },
        {
          "name": "IOnPostApplicationInitialization",
          "namespace": "SmartSoftware.Modularity",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.Modularity.IOnPostApplicationInitialization"
        },
        {
          "name": "IOnApplicationShutdown",
          "namespace": "SmartSoftware",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.IOnApplicationShutdown"
        },
        {
          "name": "IPreConfigureServices",
          "namespace": "SmartSoftware.Modularity",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.Modularity.IPreConfigureServices"
        },
        {
          "name": "IPostConfigureServices",
          "namespace": "SmartSoftware.Modularity",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.Modularity.IPostConfigureServices"
        }
      ],
      "contentType": "ssModule",
      "name": "SmartSoftwareOpenIddictDomainModule",
      "summary": null
    },
    {
      "baseClass": {
        "name": "FullAuditedAggregateRoot<Guid>",
        "namespace": "SmartSoftware.Domain.Entities.Auditing",
        "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
        "fullName": "SmartSoftware.Domain.Entities.Auditing.FullAuditedAggregateRoot<Guid>"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IEntity"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IEntity<Guid>"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IAggregateRoot<Guid>"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IAggregateRoot"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IGeneratesDomainEvents"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "SmartSoftware.Data",
          "declaringAssemblyName": "SmartSoftware.ObjectExtending",
          "fullName": "SmartSoftware.Data.IHasExtraProperties"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Data",
          "fullName": "SmartSoftware.Domain.Entities.IHasConcurrencyStamp"
        },
        {
          "name": "ICreationAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.ICreationAuditedObject"
        },
        {
          "name": "IHasCreationTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasCreationTime"
        },
        {
          "name": "IMayHaveCreator",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IMayHaveCreator"
        },
        {
          "name": "IAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IAuditedObject"
        },
        {
          "name": "IModificationAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IModificationAuditedObject"
        },
        {
          "name": "IHasModificationTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasModificationTime"
        },
        {
          "name": "IFullAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IFullAuditedObject"
        },
        {
          "name": "IDeletionAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IDeletionAuditedObject"
        },
        {
          "name": "IHasDeletionTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasDeletionTime"
        },
        {
          "name": "ISoftDelete",
          "namespace": "SmartSoftware",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.ISoftDelete"
        }
      ],
      "methods": [],
      "collectionProperties": {},
      "navigationProperties": {},
      "namespace": "SmartSoftware.OpenIddict.Tokens",
      "primaryKeyType": "Guid",
      "properties": [
        {
          "type": "System.Nullable`1[System.Guid]",
          "name": "ApplicationId",
          "summary": "Gets or sets the application associated with the current token."
        },
        {
          "type": "System.Nullable`1[System.Guid]",
          "name": "AuthorizationId",
          "summary": "Gets or sets the authorization associated with the current token."
        },
        {
          "type": "System.Nullable`1[System.DateTime]",
          "name": "CreationDate",
          "summary": "Gets or sets the UTC creation date of the current token."
        },
        {
          "type": "System.Nullable`1[System.DateTime]",
          "name": "ExpirationDate",
          "summary": "Gets or sets the UTC expiration date of the current token."
        },
        {
          "type": "System.String",
          "name": "Payload",
          "summary": "Gets or sets the payload of the current token, if applicable.\r\n            Note: this property is only used for reference tokens\r\n            and may be encrypted for security reasons."
        },
        {
          "type": "System.String",
          "name": "Properties",
          "summary": "Gets or sets the additional properties serialized as a JSON object,\r\n            or null if no bag was associated with the current token."
        },
        {
          "type": "System.Nullable`1[System.DateTime]",
          "name": "RedemptionDate",
          "summary": "Gets or sets the UTC redemption date of the current token."
        },
        {
          "type": "System.String",
          "name": "ReferenceId",
          "summary": "Gets or sets the reference identifier associated\r\n            with the current token, if applicable.\r\n            Note: this property is only used for reference tokens\r\n            and may be hashed or encrypted for security reasons."
        },
        {
          "type": "System.String",
          "name": "Status",
          "summary": "Gets or sets the status of the current token."
        },
        {
          "type": "System.String",
          "name": "Subject",
          "summary": "Gets or sets the subject associated with the current token."
        },
        {
          "type": "System.String",
          "name": "Type",
          "summary": "Gets or sets the type of the current token."
        }
      ],
      "contentType": "aggregateRoot",
      "name": "OpenIddictToken",
      "summary": null
    },
    {
      "baseClass": {
        "name": "FullAuditedAggregateRoot<Guid>",
        "namespace": "SmartSoftware.Domain.Entities.Auditing",
        "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
        "fullName": "SmartSoftware.Domain.Entities.Auditing.FullAuditedAggregateRoot<Guid>"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IEntity"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IEntity<Guid>"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IAggregateRoot<Guid>"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IAggregateRoot"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IGeneratesDomainEvents"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "SmartSoftware.Data",
          "declaringAssemblyName": "SmartSoftware.ObjectExtending",
          "fullName": "SmartSoftware.Data.IHasExtraProperties"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Data",
          "fullName": "SmartSoftware.Domain.Entities.IHasConcurrencyStamp"
        },
        {
          "name": "ICreationAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.ICreationAuditedObject"
        },
        {
          "name": "IHasCreationTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasCreationTime"
        },
        {
          "name": "IMayHaveCreator",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IMayHaveCreator"
        },
        {
          "name": "IAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IAuditedObject"
        },
        {
          "name": "IModificationAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IModificationAuditedObject"
        },
        {
          "name": "IHasModificationTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasModificationTime"
        },
        {
          "name": "IFullAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IFullAuditedObject"
        },
        {
          "name": "IDeletionAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IDeletionAuditedObject"
        },
        {
          "name": "IHasDeletionTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasDeletionTime"
        },
        {
          "name": "ISoftDelete",
          "namespace": "SmartSoftware",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.ISoftDelete"
        }
      ],
      "methods": [],
      "collectionProperties": {},
      "navigationProperties": {},
      "namespace": "SmartSoftware.OpenIddict.Scopes",
      "primaryKeyType": "Guid",
      "properties": [
        {
          "type": "System.String",
          "name": "Description",
          "summary": "Gets or sets the public description associated with the current scope."
        },
        {
          "type": "System.String",
          "name": "Descriptions",
          "summary": "Gets or sets the localized public descriptions associated\r\n            with the current scope, serialized as a JSON object."
        },
        {
          "type": "System.String",
          "name": "DisplayName",
          "summary": "Gets or sets the display name associated with the current scope."
        },
        {
          "type": "System.String",
          "name": "DisplayNames",
          "summary": "Gets or sets the localized display names\r\n            associated with the current application,\r\n            serialized as a JSON object."
        },
        {
          "type": "System.String",
          "name": "Name",
          "summary": "Gets or sets the unique name associated with the current scope."
        },
        {
          "type": "System.String",
          "name": "Properties",
          "summary": "Gets or sets the additional properties serialized as a JSON object,\r\n            or null if no bag was associated with the current scope."
        },
        {
          "type": "System.String",
          "name": "Resources",
          "summary": "Gets or sets the resources associated with the\r\n            current scope, serialized as a JSON array."
        }
      ],
      "contentType": "aggregateRoot",
      "name": "OpenIddictScope",
      "summary": null
    },
    {
      "baseClass": {
        "name": "FullAuditedAggregateRoot<Guid>",
        "namespace": "SmartSoftware.Domain.Entities.Auditing",
        "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
        "fullName": "SmartSoftware.Domain.Entities.Auditing.FullAuditedAggregateRoot<Guid>"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IEntity"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IEntity<Guid>"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IAggregateRoot<Guid>"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IAggregateRoot"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IGeneratesDomainEvents"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "SmartSoftware.Data",
          "declaringAssemblyName": "SmartSoftware.ObjectExtending",
          "fullName": "SmartSoftware.Data.IHasExtraProperties"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Data",
          "fullName": "SmartSoftware.Domain.Entities.IHasConcurrencyStamp"
        },
        {
          "name": "ICreationAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.ICreationAuditedObject"
        },
        {
          "name": "IHasCreationTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasCreationTime"
        },
        {
          "name": "IMayHaveCreator",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IMayHaveCreator"
        },
        {
          "name": "IAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IAuditedObject"
        },
        {
          "name": "IModificationAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IModificationAuditedObject"
        },
        {
          "name": "IHasModificationTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasModificationTime"
        },
        {
          "name": "IFullAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IFullAuditedObject"
        },
        {
          "name": "IDeletionAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IDeletionAuditedObject"
        },
        {
          "name": "IHasDeletionTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasDeletionTime"
        },
        {
          "name": "ISoftDelete",
          "namespace": "SmartSoftware",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.ISoftDelete"
        }
      ],
      "methods": [],
      "collectionProperties": {},
      "navigationProperties": {},
      "namespace": "SmartSoftware.OpenIddict.Authorizations",
      "primaryKeyType": "Guid",
      "properties": [
        {
          "type": "System.Nullable`1[System.Guid]",
          "name": "ApplicationId",
          "summary": "Gets or sets the application associated with the current authorization."
        },
        {
          "type": "System.Nullable`1[System.DateTime]",
          "name": "CreationDate",
          "summary": "Gets or sets the UTC creation date of the current authorization."
        },
        {
          "type": "System.String",
          "name": "Properties",
          "summary": "Gets or sets the additional properties serialized as a JSON object,\r\n            or null if no bag was associated with the current authorization."
        },
        {
          "type": "System.String",
          "name": "Scopes",
          "summary": "Gets or sets the scopes associated with the current\r\n            authorization, serialized as a JSON array."
        },
        {
          "type": "System.String",
          "name": "Status",
          "summary": "Gets or sets the status of the current authorization."
        },
        {
          "type": "System.String",
          "name": "Subject",
          "summary": "Gets or sets the subject associated with the current authorization."
        },
        {
          "type": "System.String",
          "name": "Type",
          "summary": "Gets or sets the type of the current authorization."
        }
      ],
      "contentType": "aggregateRoot",
      "name": "OpenIddictAuthorization",
      "summary": null
    },
    {
      "baseClass": {
        "name": "FullAuditedAggregateRoot<Guid>",
        "namespace": "SmartSoftware.Domain.Entities.Auditing",
        "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
        "fullName": "SmartSoftware.Domain.Entities.Auditing.FullAuditedAggregateRoot<Guid>"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IEntity"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IEntity<Guid>"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IAggregateRoot<Guid>"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IAggregateRoot"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Entities.IGeneratesDomainEvents"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "SmartSoftware.Data",
          "declaringAssemblyName": "SmartSoftware.ObjectExtending",
          "fullName": "SmartSoftware.Data.IHasExtraProperties"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "SmartSoftware.Domain.Entities",
          "declaringAssemblyName": "SmartSoftware.Data",
          "fullName": "SmartSoftware.Domain.Entities.IHasConcurrencyStamp"
        },
        {
          "name": "ICreationAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.ICreationAuditedObject"
        },
        {
          "name": "IHasCreationTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasCreationTime"
        },
        {
          "name": "IMayHaveCreator",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IMayHaveCreator"
        },
        {
          "name": "IAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IAuditedObject"
        },
        {
          "name": "IModificationAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IModificationAuditedObject"
        },
        {
          "name": "IHasModificationTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasModificationTime"
        },
        {
          "name": "IFullAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IFullAuditedObject"
        },
        {
          "name": "IDeletionAuditedObject",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IDeletionAuditedObject"
        },
        {
          "name": "IHasDeletionTime",
          "namespace": "SmartSoftware.Auditing",
          "declaringAssemblyName": "SmartSoftware.Auditing.Contracts",
          "fullName": "SmartSoftware.Auditing.IHasDeletionTime"
        },
        {
          "name": "ISoftDelete",
          "namespace": "SmartSoftware",
          "declaringAssemblyName": "SmartSoftware.Core",
          "fullName": "SmartSoftware.ISoftDelete"
        }
      ],
      "methods": [],
      "collectionProperties": {},
      "navigationProperties": {},
      "namespace": "SmartSoftware.OpenIddict.Applications",
      "primaryKeyType": "Guid",
      "properties": [
        {
          "type": "System.String",
          "name": "ClientId",
          "summary": "Gets or sets the client identifier associated with the current application."
        },
        {
          "type": "System.String",
          "name": "ClientSecret",
          "summary": "Gets or sets the client secret associated with the current application.\r\n            Note: depending on the application manager used to create this instance,\r\n            this property may be hashed or encrypted for security reasons."
        },
        {
          "type": "System.String",
          "name": "ConsentType",
          "summary": "Gets or sets the consent type associated with the current application."
        },
        {
          "type": "System.String",
          "name": "DisplayName",
          "summary": "Gets or sets the display name associated with the current application."
        },
        {
          "type": "System.String",
          "name": "DisplayNames",
          "summary": "Gets or sets the localized display names\r\n            associated with the current application,\r\n            serialized as a JSON object."
        },
        {
          "type": "System.String",
          "name": "Permissions",
          "summary": "Gets or sets the permissions associated with the\r\n            current application, serialized as a JSON array."
        },
        {
          "type": "System.String",
          "name": "PostLogoutRedirectUris",
          "summary": "Gets or sets the logout callback URLs associated with\r\n            the current application, serialized as a JSON array."
        },
        {
          "type": "System.String",
          "name": "Properties",
          "summary": "Gets or sets the additional properties serialized as a JSON object,\r\n            or null if no bag was associated with the current application."
        },
        {
          "type": "System.String",
          "name": "RedirectUris",
          "summary": "Gets or sets the callback URLs associated with the\r\n            current application, serialized as a JSON array."
        },
        {
          "type": "System.String",
          "name": "Requirements",
          "summary": "Gets or sets the requirements associated with the\r\n            current application, serialized as a JSON array."
        },
        {
          "type": "System.String",
          "name": "Type",
          "summary": "Gets or sets the application type associated with the current application."
        },
        {
          "type": "System.String",
          "name": "ClientUri",
          "summary": "URI to further information about client."
        },
        {
          "type": "System.String",
          "name": "LogoUri",
          "summary": "URI to client logo."
        }
      ],
      "contentType": "aggregateRoot",
      "name": "OpenIddictApplication",
      "summary": null
    },
    {
      "namespace": "SmartSoftware.OpenIddict.Tokens",
      "entityAnalyzeModel": {
        "namespace": "SmartSoftware.OpenIddict.Tokens",
        "primaryKeyType": "Guid",
        "properties": [],
        "contentType": "entity",
        "name": "OpenIddictToken",
        "summary": null
      },
      "implementingInterfaces": [
        {
          "name": "IBasicRepository<OpenIddictToken, Guid>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IBasicRepository<OpenIddictToken, Guid>"
        },
        {
          "name": "IBasicRepository<OpenIddictToken>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IBasicRepository<OpenIddictToken>"
        },
        {
          "name": "IReadOnlyBasicRepository<OpenIddictToken>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IReadOnlyBasicRepository<OpenIddictToken>"
        },
        {
          "name": "IRepository",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IRepository"
        },
        {
          "name": "IReadOnlyBasicRepository<OpenIddictToken, Guid>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IReadOnlyBasicRepository<OpenIddictToken, Guid>"
        }
      ],
      "methods": [
        {
          "returnType": "Void",
          "name": "DeleteManyByApplicationIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "applicationId",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "autoSave",
              "isOptional": true
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Void",
          "name": "DeleteManyByAuthorizationIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "authorizationId",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "autoSave",
              "isOptional": true
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictToken>",
          "name": "FindAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "subject",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "client",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictToken>",
          "name": "FindAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "subject",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "client",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "status",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictToken>",
          "name": "FindAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "subject",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "client",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "status",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "type",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictToken>",
          "name": "FindByApplicationIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "applicationId",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictToken>",
          "name": "FindByAuthorizationIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "authorizationId",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "OpenIddictToken",
          "name": "FindByIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "id",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "OpenIddictToken",
          "name": "FindByReferenceIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "referenceId",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictToken>",
          "name": "FindBySubjectAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "subject",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictToken>",
          "name": "ListAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Nullable<Int32>",
              "name": "count",
              "isOptional": false
            },
            {
              "type": "Nullable<Int32>",
              "name": "offset",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictToken>",
          "name": "GetPruneListAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "DateTime",
              "name": "date",
              "isOptional": false
            },
            {
              "type": "Int32",
              "name": "count",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        }
      ],
      "contentType": "repositoryInterface",
      "name": "IOpenIddictTokenRepository",
      "summary": null
    },
    {
      "namespace": "SmartSoftware.OpenIddict.Scopes",
      "entityAnalyzeModel": {
        "namespace": "SmartSoftware.OpenIddict.Scopes",
        "primaryKeyType": "Guid",
        "properties": [],
        "contentType": "entity",
        "name": "OpenIddictScope",
        "summary": null
      },
      "implementingInterfaces": [
        {
          "name": "IBasicRepository<OpenIddictScope, Guid>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IBasicRepository<OpenIddictScope, Guid>"
        },
        {
          "name": "IBasicRepository<OpenIddictScope>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IBasicRepository<OpenIddictScope>"
        },
        {
          "name": "IReadOnlyBasicRepository<OpenIddictScope>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IReadOnlyBasicRepository<OpenIddictScope>"
        },
        {
          "name": "IRepository",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IRepository"
        },
        {
          "name": "IReadOnlyBasicRepository<OpenIddictScope, Guid>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IReadOnlyBasicRepository<OpenIddictScope, Guid>"
        }
      ],
      "methods": [
        {
          "returnType": "List<OpenIddictScope>",
          "name": "GetListAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "sorting",
              "isOptional": false
            },
            {
              "type": "Int32",
              "name": "skipCount",
              "isOptional": false
            },
            {
              "type": "Int32",
              "name": "maxResultCount",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "filter",
              "isOptional": true
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Int64",
          "name": "GetCountAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "filter",
              "isOptional": true
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "OpenIddictScope",
          "name": "FindByIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "id",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "OpenIddictScope",
          "name": "FindByNameAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictScope>",
          "name": "FindByNamesAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String[]",
              "name": "names",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictScope>",
          "name": "FindByResourceAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "resource",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictScope>",
          "name": "ListAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Nullable<Int32>",
              "name": "count",
              "isOptional": false
            },
            {
              "type": "Nullable<Int32>",
              "name": "offset",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        }
      ],
      "contentType": "repositoryInterface",
      "name": "IOpenIddictScopeRepository",
      "summary": null
    },
    {
      "namespace": "SmartSoftware.OpenIddict.Authorizations",
      "entityAnalyzeModel": {
        "namespace": "SmartSoftware.OpenIddict.Authorizations",
        "primaryKeyType": "Guid",
        "properties": [],
        "contentType": "entity",
        "name": "OpenIddictAuthorization",
        "summary": null
      },
      "implementingInterfaces": [
        {
          "name": "IBasicRepository<OpenIddictAuthorization, Guid>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IBasicRepository<OpenIddictAuthorization, Guid>"
        },
        {
          "name": "IBasicRepository<OpenIddictAuthorization>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IBasicRepository<OpenIddictAuthorization>"
        },
        {
          "name": "IReadOnlyBasicRepository<OpenIddictAuthorization>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IReadOnlyBasicRepository<OpenIddictAuthorization>"
        },
        {
          "name": "IRepository",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IRepository"
        },
        {
          "name": "IReadOnlyBasicRepository<OpenIddictAuthorization, Guid>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IReadOnlyBasicRepository<OpenIddictAuthorization, Guid>"
        }
      ],
      "methods": [
        {
          "returnType": "List<OpenIddictAuthorization>",
          "name": "FindAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "subject",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "client",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictAuthorization>",
          "name": "FindAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "subject",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "client",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "status",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictAuthorization>",
          "name": "FindAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "subject",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "client",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "status",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "type",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictAuthorization>",
          "name": "FindByApplicationIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "applicationId",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "OpenIddictAuthorization",
          "name": "FindByIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "id",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictAuthorization>",
          "name": "FindBySubjectAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "subject",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictAuthorization>",
          "name": "ListAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Nullable<Int32>",
              "name": "count",
              "isOptional": false
            },
            {
              "type": "Nullable<Int32>",
              "name": "offset",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictAuthorization>",
          "name": "GetPruneListAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "DateTime",
              "name": "date",
              "isOptional": false
            },
            {
              "type": "Int32",
              "name": "count",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        }
      ],
      "contentType": "repositoryInterface",
      "name": "IOpenIddictAuthorizationRepository",
      "summary": null
    },
    {
      "namespace": "SmartSoftware.OpenIddict.Applications",
      "entityAnalyzeModel": {
        "namespace": "SmartSoftware.OpenIddict.Applications",
        "primaryKeyType": "Guid",
        "properties": [],
        "contentType": "entity",
        "name": "OpenIddictApplication",
        "summary": null
      },
      "implementingInterfaces": [
        {
          "name": "IBasicRepository<OpenIddictApplication, Guid>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IBasicRepository<OpenIddictApplication, Guid>"
        },
        {
          "name": "IBasicRepository<OpenIddictApplication>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IBasicRepository<OpenIddictApplication>"
        },
        {
          "name": "IReadOnlyBasicRepository<OpenIddictApplication>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IReadOnlyBasicRepository<OpenIddictApplication>"
        },
        {
          "name": "IRepository",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IRepository"
        },
        {
          "name": "IReadOnlyBasicRepository<OpenIddictApplication, Guid>",
          "namespace": "SmartSoftware.Domain.Repositories",
          "declaringAssemblyName": "SmartSoftware.Ddd.Domain",
          "fullName": "SmartSoftware.Domain.Repositories.IReadOnlyBasicRepository<OpenIddictApplication, Guid>"
        }
      ],
      "methods": [
        {
          "returnType": "List<OpenIddictApplication>",
          "name": "GetListAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "sorting",
              "isOptional": false
            },
            {
              "type": "Int32",
              "name": "skipCount",
              "isOptional": false
            },
            {
              "type": "Int32",
              "name": "maxResultCount",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "filter",
              "isOptional": true
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Int64",
          "name": "GetCountAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "filter",
              "isOptional": true
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "OpenIddictApplication",
          "name": "FindByClientIdAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "clientId",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictApplication>",
          "name": "FindByPostLogoutRedirectUriAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "address",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictApplication>",
          "name": "FindByRedirectUriAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "address",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<OpenIddictApplication>",
          "name": "ListAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Nullable<Int32>",
              "name": "count",
              "isOptional": false
            },
            {
              "type": "Nullable<Int32>",
              "name": "offset",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        }
      ],
      "contentType": "repositoryInterface",
      "name": "IOpenIddictApplicationRepository",
      "summary": null
    }
  ]
}