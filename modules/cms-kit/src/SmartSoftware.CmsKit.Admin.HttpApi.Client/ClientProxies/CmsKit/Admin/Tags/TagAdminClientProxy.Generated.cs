// This file is automatically generated by SS framework to use MVC Controllers from CSharp
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using SmartSoftware;
using SmartSoftware.Application.Dtos;
using SmartSoftware.DependencyInjection;
using SmartSoftware.Http.Client;
using SmartSoftware.Http.Client.ClientProxying;
using SmartSoftware.Http.Modeling;
using SmartSoftware.CmsKit.Admin.Tags;
using SmartSoftware.CmsKit.Tags;

// ReSharper disable once CheckNamespace
namespace SmartSoftware.CmsKit.Admin.Tags;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(ITagAdminAppService), typeof(TagAdminClientProxy))]
public partial class TagAdminClientProxy : ClientProxyBase<ITagAdminAppService>, ITagAdminAppService
{
    public virtual async Task<TagDto> CreateAsync(TagCreateDto input)
    {
        return await RequestAsync<TagDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(TagCreateDto), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<TagDto> GetAsync(Guid id)
    {
        return await RequestAsync<TagDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResultDto<TagDto>> GetListAsync(TagGetListInput input)
    {
        return await RequestAsync<PagedResultDto<TagDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(TagGetListInput), input }
        });
    }

    public virtual async Task<TagDto> UpdateAsync(Guid id, TagUpdateDto input)
    {
        return await RequestAsync<TagDto>(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(TagUpdateDto), input }
        });
    }

    public virtual async Task<List<TagDefinitionDto>> GetTagDefinitionsAsync()
    {
        return await RequestAsync<List<TagDefinitionDto>>(nameof(GetTagDefinitionsAsync));
    }
}
