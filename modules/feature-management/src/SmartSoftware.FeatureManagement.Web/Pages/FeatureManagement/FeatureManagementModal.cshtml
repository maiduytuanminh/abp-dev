@page
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@using SmartSoftware.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@using SmartSoftware.FeatureManagement.Localization
@using SmartSoftware.Validation.StringValues
@using SmartSoftware.FeatureManagement.Web.Pages.FeatureManagement
@model FeatureManagementModal
@inject IHtmlLocalizer<SmartSoftwareFeatureManagementResource> L
@inject IStringLocalizerFactory StringLocalizerFactory
@{
    Layout = null;

    IHtmlLocalizer CreateHtmlLocalizer(string resourceName)
    {
        var localizer = StringLocalizerFactory.CreateByResourceNameOrNull(resourceName) ??
                        StringLocalizerFactory.CreateDefaultOrNull();
        return new HtmlLocalizer(localizer);
    }
}

<ss-script src="/Pages/FeatureManagement/feature-management-modal.js" />

<form method="post" asp-page="/FeatureManagement/FeatureManagementModal" data-script-class="ss.modals.FeatureManagement">
    <ss-modal id="featureManagmentModal" size="Large">
        <ss-modal-header title="@(L["Features"].Value)"></ss-modal-header>
        @if (Model.FeatureListResultDto != null && Model.FeatureListResultDto.Groups.Any())
        {
            var featureGroups = Model.FeatureListResultDto.Groups;

            <ss-modal-body>
                <input asp-for="@Model.ProviderKey"/>
                <input asp-for="@Model.ProviderName"/>
                <ss-tabs name="FeaturesTabs" tab-style="PillVertical" vertical-header-size="_4" class="custom-scroll-container">
                    @for (var i = 0; i < featureGroups.Count; i++)
                    {
                        var featureGroup = featureGroups[i];
                        <ss-tab title="@featureGroup.DisplayName" name="v-pills-tab-@featureGroup.GetNormalizedGroupName()">
                            <h4>@featureGroup.DisplayName</h4>
                            <hr class="mt-2 mb-3"/>
                            <div class="custom-scroll-content">
                                <div class="pl-1 pt-1">
                                    @for (var j = 0; j < featureGroup.Features.Count; j++)
                                    {
                                        var feature = featureGroup.Features[j];
                                        var disabled = Model.IsDisabled(feature.Provider.Name);
                                        <div class="mt-2">

                                            <input type="text" ss-id-name="@Model.FeatureGroups[i].Features[j].Type" value="@feature.ValueType?.Name" hidden/>

                                            @if (feature.ValueType is ToggleStringValueType)
                                            {
                                                <ss-input asp-for="@feature.Value"
                                                           type="checkbox"
                                                           ss-id-name="@Model.FeatureGroups[i].Features[j].BoolValue"
                                                           label="@feature.DisplayName"
                                                           disabled="@disabled"
                                                           group-data-feature-name="@feature.Name"
                                                           group-data-parent-name="@(feature.ParentName ?? "")"
                                                           group-style="margin-inline-start: @(feature.Depth * 20)px"/>
                                                @if (feature.Description != null)
                                                {
                                                    <div class="form-text" style="margin-inline-start: @(feature.Depth * 20)px">@feature.Description</div>
                                                }

                                            }

                                            @if (feature.ValueType is FreeTextStringValueType)
                                            {
                                                var type = "text";
                                                if(feature.ValueType.Validator is NumericValueValidator)
                                                {
                                                    type = "number";
                                                }

                                                <ss-input asp-for="@feature.Value"
                                                           label="@feature.DisplayName"
                                                           ss-id-name="@Model.FeatureGroups[i].Features[j].Value"
                                                           disabled="@disabled"
                                                           type="@type"
                                                           group-data-feature-name="@feature.Name"
                                                           group-data-parent-name="@(feature.ParentName ?? "")"
                                                           group-style="margin-inline-start: @(feature.Depth * 25)px"/>
                                                @if (feature.Description != null)
                                                {
                                                    <div class="form-text" style="margin-inline-start: @(feature.Depth * 25)px">@feature.Description</div>
                                                }
                                            }

                                            @if (feature.ValueType is SelectionStringValueType selectType)
                                            {
                                                <div data-feature-name="@feature.Name" data-parent-name="@(feature.ParentName ?? "")" style="margin-inline-start: @(feature.Depth * 25)px" class="mb-3">
                                                    <label class="form-label" for="@feature.Name">@feature.DisplayName</label>

                                                    <select id="@feature.Name" name="FeatureGroups[@i].Features[@j].Value" class="form-select">
                                                        @foreach (var item in selectType.ItemSource.Items)
                                                        {
                                                            if (item.Value == feature.Value)
                                                            {
                                                                <option value="@item.Value" selected="selected"> @CreateHtmlLocalizer(item.DisplayText.ResourceName).GetString(item.DisplayText.Name) </option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@item.Value"> @CreateHtmlLocalizer(item.DisplayText.ResourceName).GetString(item.DisplayText.Name) </option>
                                                            }
                                                        }
                                                    </select>
                                                    @if (feature.Description != null)
                                                    {
                                                        <div class="form-text" style="margin-inline-start: @(feature.Depth * 25)px">@feature.Description</div>
                                                    }
                                                </div>
                                            }

                                            <input value="@feature.Name" ss-id-name="@Model.FeatureGroups[i].Features[j].Name" hidden/>
                                        </div>
                                    }
                                </div>
                            </div>
                        </ss-tab>
                    }

                </ss-tabs>
            </ss-modal-body>
            <ss-modal-footer>
                <ss-button data-bs-dismiss="modal" button-type="Link">@L["Cancel"]</ss-button>
                <ss-button button-type="Outline_Primary" id="ResetToDefaults"><i class="fa fa-refresh"></i> @L["ResetToDefault"]</ss-button>
                <ss-button button-type="Primary" type="submit"><i class="fa fa-check"></i> @L["Save"]</ss-button>
            </ss-modal-footer>
        }
        else
        {
            <ss-modal-body class="my-2">
                @L["NoFeatureFoundMessage"]
            </ss-modal-body>
        }
    </ss-modal>
</form>
