{
  "culture": "en",
  "texts": {
    "Menu:IdentityManagement": "Identity management",
    "Users": "Users",
    "NewUser": "New user",
    "UserName": "User name",
    "Surname":"Surname",
    "EmailAddress": "Email address",
    "PhoneNumber": "Phone number",
    "UserInformations": "User Information",
    "DisplayName:IsDefault": "Default",
    "DisplayName:IsStatic": "Static",
    "DisplayName:IsPublic": "Public",
    "Roles": "Roles",
    "Password": "Password",
    "PersonalInfo": "My profile",
    "PersonalSettings": "Personal settings",
    "UserDeletionConfirmationMessage": "User '{0}' will be deleted. Do you confirm that?",
    "RoleDeletionConfirmationMessage": "Role '{0}' will be deleted. Do you confirm that?",
    "DisplayName:RoleName": "Role name",
    "DisplayName:UserName": "User name",
    "DisplayName:Name": "Name",
    "DisplayName:Surname": "Surname",
    "DisplayName:Password": "Password",
    "DisplayName:Email": "Email address",
    "DisplayName:PhoneNumber": "Phone number",
    "DisplayName:TwoFactorEnabled": "Two factor verification",
    "DisplayName:IsActive": "Active",
    "DisplayName:LockoutEnabled": "Account lockout",
    "NewRole": "New role",
    "RoleName": "Role name",
    "CreationTime": "Creation time",
    "Permissions": "Permissions",
    "DisplayName:CurrentPassword": "Current password",
    "DisplayName:NewPassword": "New password",
    "DisplayName:NewPasswordConfirm": "Confirm new password",
    "PasswordChangedMessage": "Your password has been changed successfully.",
    "PersonalSettingsSavedMessage": "Your personal settings has been saved successfully.",
    "SmartSoftware.Identity:DefaultError": "An unknown failure has occurred.",
    "SmartSoftware.Identity:ConcurrencyFailure": "Optimistic concurrency check has been failed. The entity you're working on has modified by another user. Please discard your changes and try again.",
    "SmartSoftware.Identity:DuplicateEmail": "Email '{0}' is already taken.",
    "SmartSoftware.Identity:DuplicateRoleName": "Role name '{0}' is already taken.",
    "SmartSoftware.Identity:DuplicateUserName": "Username '{0}' is already taken.",
    "SmartSoftware.Identity:InvalidEmail": "Email '{0}' is invalid.",
    "SmartSoftware.Identity:InvalidPasswordHasherCompatibilityMode": "The provided PasswordHasherCompatibilityMode is invalid.",
    "SmartSoftware.Identity:InvalidPasswordHasherIterationCount": "The iteration count must be a positive integer.",
    "SmartSoftware.Identity:InvalidRoleName": "Role name '{0}' is invalid.",
    "SmartSoftware.Identity:InvalidToken": "Invalid token.",
    "SmartSoftware.Identity:InvalidUserName": "Username '{0}' is invalid, can only contain letters or digits.",
    "InvalidUserName": "Username '{0}' is invalid.",
    "SmartSoftware.Identity:LoginAlreadyAssociated": "A user with this login already exists.",
    "SmartSoftware.Identity:PasswordMismatch": "Incorrect password.",
    "SmartSoftware.Identity:PasswordRequiresDigit": "Passwords must have at least one digit ('0'-'9').",
    "SmartSoftware.Identity:PasswordRequiresLower": "Passwords must have at least one lowercase ('a'-'z').",
    "SmartSoftware.Identity:PasswordRequiresNonAlphanumeric": "Passwords must have at least one non alphanumeric character.",
    "SmartSoftware.Identity:PasswordRequiresUpper": "Passwords must have at least one uppercase ('A'-'Z').",
    "SmartSoftware.Identity:PasswordTooShort": "Passwords must be at least {0} characters.",
    "SmartSoftware.Identity:PasswordRequiresUniqueChars": "Passwords must use at least {0} different characters.",
    "SmartSoftware.Identity:RoleNotFound": "Role {0} does not exist.",
    "SmartSoftware.Identity:UserAlreadyHasPassword": "User already has a password set.",
    "SmartSoftware.Identity:UserAlreadyInRole": "User already in role '{0}'.",
    "SmartSoftware.Identity:UserLockedOut": "User is locked out.",
    "SmartSoftware.Identity:UserLockoutNotEnabled": "Lockout is not enabled for this user.",
    "SmartSoftware.Identity:UserNameNotFound": "User {0} does not exist.",
    "SmartSoftware.Identity:UserNotInRole": "User is not in role '{0}'.",
    "SmartSoftware.Identity:PasswordConfirmationFailed": "Password does not match the confirm password.",
    "SmartSoftware.Identity:NullSecurityStamp": "User security stamp cannot be null.",
    "SmartSoftware.Identity:RecoveryCodeRedemptionFailed": "Recovery code redemption failed.",
    "SmartSoftware.Identity:010001": "You can not delete your own account!",
    "SmartSoftware.Identity:010002": "Can not set more than {MaxUserMembershipCount} organization unit for a user!",
    "SmartSoftware.Identity:010003": "Can not change password of an externally logged in user!",
    "SmartSoftware.Identity:010004": "There is already an organization unit with name {0}. Two units with same name can not be created in same level.",
    "SmartSoftware.Identity:010005": "Static roles can not be renamed.",
    "SmartSoftware.Identity:010006": "Static roles can not be deleted.",
    "SmartSoftware.Identity:010007": "You can't change your two factor setting.",
    "SmartSoftware.Identity:010008": "It's not allowed to change two factor setting.",
    "SmartSoftware.Identity:010009": "You can not delegate yourself.",
    "SmartSoftware.Identity:010021": "Name exist: '{0}'.",
    "Identity.OrganizationUnit.MaxUserMembershipCount": "Maximum allowed organization unit membership count for a user",
    "ThisUserIsNotActiveMessage": "This user is not active.",
    "Permission:IdentityManagement": "Identity management",
    "Permission:RoleManagement": "Role management",
    "Permission:Create": "Create",
    "Permission:Edit": "Edit",
    "Permission:Delete": "Delete",
    "Permission:ChangePermissions": "Change permissions",
    "Permission:ManageRoles": "Manage roles",
    "Permission:UserManagement": "User management",
    "Permission:UserLookup": "User lookup",
    "DisplayName:SmartSoftware.Identity.Password.RequiredLength": "Required length",
    "DisplayName:SmartSoftware.Identity.Password.RequiredUniqueChars": "Required unique characters number",
    "DisplayName:SmartSoftware.Identity.Password.RequireNonAlphanumeric": "Required non-alphanumeric character",
    "DisplayName:SmartSoftware.Identity.Password.RequireLowercase": "Required lower case character",
    "DisplayName:SmartSoftware.Identity.Password.RequireUppercase": "Required upper case character",
    "DisplayName:SmartSoftware.Identity.Password.RequireDigit": "Required digit",
    "DisplayName:SmartSoftware.Identity.Password.ForceUsersToPeriodicallyChangePassword": "Force users to periodically change password",
    "DisplayName:SmartSoftware.Identity.Password.PasswordChangePeriodDays": "Password change period(days)",
    "DisplayName:SmartSoftware.Identity.Lockout.AllowedForNewUsers": "Enabled for new users",
    "DisplayName:SmartSoftware.Identity.Lockout.LockoutDuration": "Lockout duration(seconds)",
    "DisplayName:SmartSoftware.Identity.Lockout.MaxFailedAccessAttempts": "Max failed access attempts",
    "DisplayName:SmartSoftware.Identity.SignIn.RequireConfirmedEmail": "Require confirmed email",
    "DisplayName:SmartSoftware.Identity.SignIn.EnablePhoneNumberConfirmation": "Allow users to confirm their phone number",
    "DisplayName:SmartSoftware.Identity.SignIn.RequireConfirmedPhoneNumber": "Require confirmed phone number",
    "DisplayName:SmartSoftware.Identity.User.IsUserNameUpdateEnabled": "Allow users to change their usernames",
    "DisplayName:SmartSoftware.Identity.User.IsEmailUpdateEnabled": "Allow users to change their email addresses",
    "Description:SmartSoftware.Identity.Password.RequiredLength": "The minimum length a password must be.",
    "Description:SmartSoftware.Identity.Password.RequiredUniqueChars": "The minimum number of unique characters which a password must contain.",
    "Description:SmartSoftware.Identity.Password.RequireNonAlphanumeric": "If passwords must contain a non-alphanumeric character.",
    "Description:SmartSoftware.Identity.Password.RequireLowercase": "If passwords must contain a lower case ASCII character.",
    "Description:SmartSoftware.Identity.Password.RequireUppercase": "If passwords must contain a upper case ASCII character.",
    "Description:SmartSoftware.Identity.Password.RequireDigit": "If passwords must contain a digit.",
    "Description:SmartSoftware.Identity.Password.ForceUsersToPeriodicallyChangePassword": "Whether users are forced to periodically change their password.",
    "Description:SmartSoftware.Identity.Password.PasswordChangePeriodDays": "The number of days a user's password is valid for.",
    "Description:SmartSoftware.Identity.Lockout.AllowedForNewUsers": "Whether a new user can be locked out.",
    "Description:SmartSoftware.Identity.Lockout.LockoutDuration": "The duration a user is locked out for when a lockout occurs.",
    "Description:SmartSoftware.Identity.Lockout.MaxFailedAccessAttempts": "The number of failed access attempts allowed before a user is locked out, assuming lock out is enabled.",
    "Description:SmartSoftware.Identity.SignIn.RequireConfirmedEmail": "Whether a confirmed email address is required to sign in.",
    "Description:SmartSoftware.Identity.SignIn.EnablePhoneNumberConfirmation": "Whether the phoneNumber can be confirmed by the user.",
    "Description:SmartSoftware.Identity.SignIn.RequireConfirmedPhoneNumber": "Whether a confirmed telephone number is required to sign in.",
    "Description:SmartSoftware.Identity.User.IsUserNameUpdateEnabled": "Whether the username can be updated by the user.",
    "Description:SmartSoftware.Identity.User.IsEmailUpdateEnabled": "Whether the email can be updated by the user.",
    "Details": "Details",
    "CreatedBy": "Created by",
    "ModifiedBy": "Modified by",
    "ModificationTime": "Modification time",
    "PasswordUpdateTime": "Password update time",
    "LockoutEndTime": "Lockout end time",
    "FailedAccessCount": "Failed access count"
  }
}
